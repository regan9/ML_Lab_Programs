import sys
from urllib.request import urlopen
import numpy as np
import pandas as pd


heartDisease_df = pd.read_csv('heart1.csv')

heartDisease_df.drop(['ca', 'slope', 'thal', 'oldpeak'], axis=1, inplace=True)

heartDisease_df.replace('?', np.nan, inplace=True)

from pgmpy.estimators import MaximumLikelihoodEstimator
from pgmpy.models import BayesianModel
model = BayesianModel([('age', 'trestbps'),('age', 'fbs'), ('sex', 'trestbps'),('exang', 'trestbps'), ('trestbps', 'heartdisease'),('fbs', 'heartdisease'), ('heartdisease', 'restecg'),('heartdisease', 'thalach'), ('heartdisease', 'chol')])
# Learing CPDs using Maximum Likelihood Estimators
model.fit(heartDisease_df, estimator=MaximumLikelihoodEstimator)

print(model.get_cpds('age'))
print(model.get_cpds('chol'))
print(model.get_cpds('sex'))
model.get_independencies()

from pgmpy.inference import VariableElimination
HeartDisease_infer = VariableElimination(model)


q = HeartDisease_infer.query(variables=['heartdisease'], evidence={'age': 28})
# prob_offer = olympic_infer.query(variables = ['Offer'])
# print(q['heartdisease'])
print(q)


q = HeartDisease_infer.query(variables=['heartdisease'],evidence={'chol': 100})
print(q)